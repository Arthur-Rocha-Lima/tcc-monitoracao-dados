// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.12.4
// source: metrics.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Mensagem de requisição vazia.
type MetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsRequest) Reset() {
	*x = MetricsRequest{}
	mi := &file_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsRequest) ProtoMessage() {}

func (x *MetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsRequest.ProtoReflect.Descriptor instead.
func (*MetricsRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{0}
}

// Mensagem de resposta que contém todas as métricas.
type MetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	System        *SystemMetrics         `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Memory        *MemoryMetrics         `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Cpu           *CPUMetrics            `protobuf:"bytes,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Disk          *DiskMetrics           `protobuf:"bytes,4,opt,name=disk,proto3" json:"disk,omitempty"`
	Network       *NetworkMetrics        `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsResponse) Reset() {
	*x = MetricsResponse{}
	mi := &file_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsResponse) ProtoMessage() {}

func (x *MetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsResponse.ProtoReflect.Descriptor instead.
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *MetricsResponse) GetSystem() *SystemMetrics {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *MetricsResponse) GetMemory() *MemoryMetrics {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *MetricsResponse) GetCpu() *CPUMetrics {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *MetricsResponse) GetDisk() *DiskMetrics {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *MetricsResponse) GetNetwork() *NetworkMetrics {
	if x != nil {
		return x.Network
	}
	return nil
}

type SystemMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Platform      string                 `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Architecture  string                 `protobuf:"bytes,3,opt,name=architecture,proto3" json:"architecture,omitempty"`
	GoVersion     string                 `protobuf:"bytes,4,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`
	Uptime        string                 `protobuf:"bytes,5,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Timestamp     string                 `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemMetrics) Reset() {
	*x = SystemMetrics{}
	mi := &file_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMetrics) ProtoMessage() {}

func (x *SystemMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMetrics.ProtoReflect.Descriptor instead.
func (*SystemMetrics) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *SystemMetrics) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SystemMetrics) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SystemMetrics) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *SystemMetrics) GetGoVersion() string {
	if x != nil {
		return x.GoVersion
	}
	return ""
}

func (x *SystemMetrics) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

func (x *SystemMetrics) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type MemoryMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalMb       uint64                 `protobuf:"varint,1,opt,name=total_mb,json=totalMb,proto3" json:"total_mb,omitempty"`
	UsedMb        uint64                 `protobuf:"varint,2,opt,name=used_mb,json=usedMb,proto3" json:"used_mb,omitempty"`
	FreeMb        uint64                 `protobuf:"varint,3,opt,name=free_mb,json=freeMb,proto3" json:"free_mb,omitempty"`
	UsedPercent   float64                `protobuf:"fixed64,4,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryMetrics) Reset() {
	*x = MemoryMetrics{}
	mi := &file_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryMetrics) ProtoMessage() {}

func (x *MemoryMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryMetrics.ProtoReflect.Descriptor instead.
func (*MemoryMetrics) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *MemoryMetrics) GetTotalMb() uint64 {
	if x != nil {
		return x.TotalMb
	}
	return 0
}

func (x *MemoryMetrics) GetUsedMb() uint64 {
	if x != nil {
		return x.UsedMb
	}
	return 0
}

func (x *MemoryMetrics) GetFreeMb() uint64 {
	if x != nil {
		return x.FreeMb
	}
	return 0
}

func (x *MemoryMetrics) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *MemoryMetrics) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type CPUMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cores         int32                  `protobuf:"varint,1,opt,name=cores,proto3" json:"cores,omitempty"`
	UsagePercent  float64                `protobuf:"fixed64,2,opt,name=usage_percent,json=usagePercent,proto3" json:"usage_percent,omitempty"`
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUMetrics) Reset() {
	*x = CPUMetrics{}
	mi := &file_metrics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUMetrics) ProtoMessage() {}

func (x *CPUMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUMetrics.ProtoReflect.Descriptor instead.
func (*CPUMetrics) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *CPUMetrics) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *CPUMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *CPUMetrics) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type DiskMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalGb       uint64                 `protobuf:"varint,1,opt,name=total_gb,json=totalGb,proto3" json:"total_gb,omitempty"`
	UsedGb        uint64                 `protobuf:"varint,2,opt,name=used_gb,json=usedGb,proto3" json:"used_gb,omitempty"`
	FreeGb        uint64                 `protobuf:"varint,3,opt,name=free_gb,json=freeGb,proto3" json:"free_gb,omitempty"`
	UsedPercent   float64                `protobuf:"fixed64,4,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskMetrics) Reset() {
	*x = DiskMetrics{}
	mi := &file_metrics_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskMetrics) ProtoMessage() {}

func (x *DiskMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskMetrics.ProtoReflect.Descriptor instead.
func (*DiskMetrics) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{5}
}

func (x *DiskMetrics) GetTotalGb() uint64 {
	if x != nil {
		return x.TotalGb
	}
	return 0
}

func (x *DiskMetrics) GetUsedGb() uint64 {
	if x != nil {
		return x.UsedGb
	}
	return 0
}

func (x *DiskMetrics) GetFreeGb() uint64 {
	if x != nil {
		return x.FreeGb
	}
	return 0
}

func (x *DiskMetrics) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *DiskMetrics) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type NetworkMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BytesSent     uint64                 `protobuf:"varint,1,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesRecv     uint64                 `protobuf:"varint,2,opt,name=bytes_recv,json=bytesRecv,proto3" json:"bytes_recv,omitempty"`
	PacketsSent   uint64                 `protobuf:"varint,3,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsRecv   uint64                 `protobuf:"varint,4,opt,name=packets_recv,json=packetsRecv,proto3" json:"packets_recv,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkMetrics) Reset() {
	*x = NetworkMetrics{}
	mi := &file_metrics_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMetrics) ProtoMessage() {}

func (x *NetworkMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkMetrics.ProtoReflect.Descriptor instead.
func (*NetworkMetrics) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkMetrics) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *NetworkMetrics) GetBytesRecv() uint64 {
	if x != nil {
		return x.BytesRecv
	}
	return 0
}

func (x *NetworkMetrics) GetPacketsSent() uint64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *NetworkMetrics) GetPacketsRecv() uint64 {
	if x != nil {
		return x.PacketsRecv
	}
	return 0
}

func (x *NetworkMetrics) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_metrics_proto protoreflect.FileDescriptor

const file_metrics_proto_rawDesc = "" +
	"\n" +
	"\rmetrics.proto\x12\ametrics\"\x10\n" +
	"\x0eMetricsRequest\"\xf5\x01\n" +
	"\x0fMetricsResponse\x12.\n" +
	"\x06system\x18\x01 \x01(\v2\x16.metrics.SystemMetricsR\x06system\x12.\n" +
	"\x06memory\x18\x02 \x01(\v2\x16.metrics.MemoryMetricsR\x06memory\x12%\n" +
	"\x03cpu\x18\x03 \x01(\v2\x13.metrics.CPUMetricsR\x03cpu\x12(\n" +
	"\x04disk\x18\x04 \x01(\v2\x14.metrics.DiskMetricsR\x04disk\x121\n" +
	"\anetwork\x18\x05 \x01(\v2\x17.metrics.NetworkMetricsR\anetwork\"\xc0\x01\n" +
	"\rSystemMetrics\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1a\n" +
	"\bplatform\x18\x02 \x01(\tR\bplatform\x12\"\n" +
	"\farchitecture\x18\x03 \x01(\tR\farchitecture\x12\x1d\n" +
	"\n" +
	"go_version\x18\x04 \x01(\tR\tgoVersion\x12\x16\n" +
	"\x06uptime\x18\x05 \x01(\tR\x06uptime\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\tR\ttimestamp\"\x9d\x01\n" +
	"\rMemoryMetrics\x12\x19\n" +
	"\btotal_mb\x18\x01 \x01(\x04R\atotalMb\x12\x17\n" +
	"\aused_mb\x18\x02 \x01(\x04R\x06usedMb\x12\x17\n" +
	"\afree_mb\x18\x03 \x01(\x04R\x06freeMb\x12!\n" +
	"\fused_percent\x18\x04 \x01(\x01R\vusedPercent\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\"e\n" +
	"\n" +
	"CPUMetrics\x12\x14\n" +
	"\x05cores\x18\x01 \x01(\x05R\x05cores\x12#\n" +
	"\rusage_percent\x18\x02 \x01(\x01R\fusagePercent\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\"\x9b\x01\n" +
	"\vDiskMetrics\x12\x19\n" +
	"\btotal_gb\x18\x01 \x01(\x04R\atotalGb\x12\x17\n" +
	"\aused_gb\x18\x02 \x01(\x04R\x06usedGb\x12\x17\n" +
	"\afree_gb\x18\x03 \x01(\x04R\x06freeGb\x12!\n" +
	"\fused_percent\x18\x04 \x01(\x01R\vusedPercent\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\"\xb2\x01\n" +
	"\x0eNetworkMetrics\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x01 \x01(\x04R\tbytesSent\x12\x1d\n" +
	"\n" +
	"bytes_recv\x18\x02 \x01(\x04R\tbytesRecv\x12!\n" +
	"\fpackets_sent\x18\x03 \x01(\x04R\vpacketsSent\x12!\n" +
	"\fpackets_recv\x18\x04 \x01(\x04R\vpacketsRecv\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp2P\n" +
	"\rMetricService\x12?\n" +
	"\n" +
	"GetMetrics\x12\x17.metrics.MetricsRequest\x1a\x18.metrics.MetricsResponseB\fZ\n" +
	"./;metricsb\x06proto3"

var (
	file_metrics_proto_rawDescOnce sync.Once
	file_metrics_proto_rawDescData []byte
)

func file_metrics_proto_rawDescGZIP() []byte {
	file_metrics_proto_rawDescOnce.Do(func() {
		file_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metrics_proto_rawDesc), len(file_metrics_proto_rawDesc)))
	})
	return file_metrics_proto_rawDescData
}

var file_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_metrics_proto_goTypes = []any{
	(*MetricsRequest)(nil),  // 0: metrics.MetricsRequest
	(*MetricsResponse)(nil), // 1: metrics.MetricsResponse
	(*SystemMetrics)(nil),   // 2: metrics.SystemMetrics
	(*MemoryMetrics)(nil),   // 3: metrics.MemoryMetrics
	(*CPUMetrics)(nil),      // 4: metrics.CPUMetrics
	(*DiskMetrics)(nil),     // 5: metrics.DiskMetrics
	(*NetworkMetrics)(nil),  // 6: metrics.NetworkMetrics
}
var file_metrics_proto_depIdxs = []int32{
	2, // 0: metrics.MetricsResponse.system:type_name -> metrics.SystemMetrics
	3, // 1: metrics.MetricsResponse.memory:type_name -> metrics.MemoryMetrics
	4, // 2: metrics.MetricsResponse.cpu:type_name -> metrics.CPUMetrics
	5, // 3: metrics.MetricsResponse.disk:type_name -> metrics.DiskMetrics
	6, // 4: metrics.MetricsResponse.network:type_name -> metrics.NetworkMetrics
	0, // 5: metrics.MetricService.GetMetrics:input_type -> metrics.MetricsRequest
	1, // 6: metrics.MetricService.GetMetrics:output_type -> metrics.MetricsResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_metrics_proto_init() }
func file_metrics_proto_init() {
	if File_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metrics_proto_rawDesc), len(file_metrics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metrics_proto_goTypes,
		DependencyIndexes: file_metrics_proto_depIdxs,
		MessageInfos:      file_metrics_proto_msgTypes,
	}.Build()
	File_metrics_proto = out.File
	file_metrics_proto_goTypes = nil
	file_metrics_proto_depIdxs = nil
}
